
project frameworks/base/
diff --git a/frameworks/base/core/jni/android_view_HardwareRenderer.cpp b/frameworks/base/core/jni/android_view_HardwareRenderer.cpp
index 479fbe2..712e76b 100644
--- a/frameworks/base/core/jni/android_view_HardwareRenderer.cpp
+++ b/frameworks/base/core/jni/android_view_HardwareRenderer.cpp
@@ -125,9 +125,11 @@ static void android_view_HardwareRenderer_beginFrame(JNIEnv* env, jobject clazz,
 }
 
 static jlong android_view_HardwareRenderer_getSystemTime(JNIEnv* env, jobject clazz) {
+#ifndef STE_HARDWARE
     if (uirenderer::Extensions::getInstance().hasNvSystemTime()) {
         return eglGetSystemTimeNV();
     }
+#endif
     return systemTime(SYSTEM_TIME_MONOTONIC);
 }
 
diff --git a/frameworks/base/media/java/android/media/AudioService.java b/frameworks/base/media/java/android/media/AudioService.java
index 860d81e..fae5b37 100644
--- a/frameworks/base/media/java/android/media/AudioService.java
+++ b/frameworks/base/media/java/android/media/AudioService.java
@@ -1077,8 +1077,6 @@ public class AudioService extends IAudioService.Stub {
 
             oldIndex = streamState.getIndex(device);
 
-            index = rescaleIndex(index * 10, streamType, streamTypeAlias);
-
             if (streamTypeAlias == AudioSystem.STREAM_MUSIC &&
                 (device & AudioSystem.DEVICE_OUT_ALL_A2DP) != 0 &&
                 (flags & AudioManager.FLAG_BLUETOOTH_ABS_VOLUME) == 0) {
@@ -1089,6 +1087,8 @@ public class AudioService extends IAudioService.Stub {
                 }
             }
 
+            index = rescaleIndex(index * 10, streamType, streamTypeAlias);
+
             flags &= ~AudioManager.FLAG_FIXED_VOLUME;
             if ((streamTypeAlias == AudioSystem.STREAM_MUSIC) &&
                     ((device & mFixedVolumeDevices) != 0)) {
